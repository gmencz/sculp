datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String      @id @default(cuid())
  email            String      @unique
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")
  password         Password?
  exercises        Exercise[]
  mesocycles       Mesocycle[] @relation("ExistingMesocycles")
  currentMesocycle Mesocycle?  @relation("CurrentMesocycle")

  @@map("users")
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique @map("user_id")

  @@map("passwords")
}

model AccessRequest {
  id             String   @id @default(cuid())
  email          String   @unique
  approved       Boolean  @default(false)
  currentLogbook String?  @map("current_logbook") // What the user is currently using as their logbook (Notes on their phone, some app like Strong, etc...)
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@map("access_requests")
}

model Exercise {
  id                  String                @id @default(cuid())
  name                String
  user                User                  @relation(fields: [userId], references: [id])
  userId              String                @map("user_id")
  notes               String? // Notes about the exercise like a link to a youtube video, notes about the execution of the exercise etc.
  createdAt           DateTime              @default(now()) @map("created_at")
  updatedAt           DateTime              @updatedAt @map("updated_at")
  muscleGroups        MuscleGroup[]
  TrainingDayExercise TrainingDayExercise[]

  @@unique([name, userId])
  @@map("exercises")
}

model Mesocycle {
  id              String        @id @default(cuid())
  name            String
  durationInWeeks Int
  goal            String?
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")
  trainingDays    TrainingDay[]
  user            User?         @relation("ExistingMesocycles", fields: [userId], references: [id])
  userId          String?
  currentUser     User?         @relation("CurrentMesocycle", fields: [currentUserId], references: [id])
  currentUserId   String?       @unique

  @@map("mesocycles")
}

model TrainingDay {
  id           String                @id @default(cuid())
  mesocycle    Mesocycle?            @relation(fields: [mesocycleId], references: [id])
  mesocycleId  String?               @map("mesocycle_id")
  label        String // The label of the training day, it could be "Day 1" or "Monday" or "Push Day 1" for example.
  order        Int // The order of the day, if it is 2 then it will be the 2nd training day.
  muscleGroups MuscleGroup[]
  exercises    TrainingDayExercise[]

  @@map("mesocycles_training_days")
}

model TrainingDayExercise {
  id                 String       @id @default(cuid())
  sets               Int
  rir                Int // Reps in reserve
  repRangeLowerBound Int          @map("rep_range_lower_bound") // If rep range is 5-8 reps then this would be 5 
  repRangeUpperBound Int          @map("rep_range_upper_bound") // If rep range is 5-8 reps then this would be 8
  minRestPeriod      Int          @map("min_rest_period") // If rest period is 3-5 minutes then this would be 3
  maxRestPeriod      Int          @map("max_rest_period") // If rest period is 3-5 minutes then this would be 5
  notes              String?
  exercise           Exercise     @relation(fields: [exerciseId], references: [id])
  exerciseId         String       @map("exercise_id")
  trainingDay        TrainingDay? @relation(fields: [trainingDayId], references: [id])
  trainingDayId      String?      @map("training_day_id")

  @@map("training_days_exercises")
}

model MuscleGroup {
  id           String        @id @default(cuid())
  name         String // The name of the muscle group, like "Chest" or "Back" for example.
  trainingDays TrainingDay[]
  exercises    Exercise[]

  @@map("muscle_groups")
}
